{"version":3,"sources":["/src/views/history/HistoryList.tsx","/src/views/history/index.tsx","/src/views/history/HistoryItem.tsx"],"sourcesContent":["import { Travel } from \"@interfaces/models/travel\";\r\nimport HistoryItem from \"./HistoryItem\";\r\n\r\ninterface Props {\r\n  travelHistory?: Travel[];\r\n}\r\nexport default function HistoryList({ travelHistory = [] }: Props) {\r\n  if (travelHistory.length === 0)\r\n    return (\r\n      <div className=\"w-full h-full flex flex-col justify-center items-center\">\r\n        <h2> Â¿Nuev@ por aquÃ­? </h2>\r\n        <strong className=\"text-center text-balance\">\r\n          No tienes viajes aÃºn, Â¿Que tal si te animas ahora?\r\n        </strong>\r\n      </div>\r\n    );\r\n  return (\r\n    <ul>\r\n      {travelHistory.map((travel, index) => (\r\n        <li key={travel.id}>\r\n          <HistoryItem key={index} {...travel} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { Error } from \"@components\";\r\nimport { useInfiniteQuery } from \"@tanstack/react-query\";\r\nimport HistoryList from \"./HistoryList\";\r\nimport PassengerService from \"@services/passenger.service\";\r\nimport { useIntersectionObserver, useSelector } from \"@hooks\";\r\nimport QueryKeys from \"@constants/queryKeys.constants\";\r\nimport DriverService from \"@services/driver.service\";\r\n\r\nexport default function History() {\r\n  const { type } = useSelector((state) => state.user);\r\n  const {\r\n    data,\r\n    isLoading,\r\n    isError,\r\n    isFetchingNextPage,\r\n    fetchNextPage,\r\n    hasNextPage,\r\n  } = useInfiniteQuery({\r\n    queryKey: [QueryKeys.MY_TRAVELS],\r\n    queryFn:\r\n      type === \"passenger\"\r\n        ? PassengerService.travelHistory\r\n        : DriverService.travelHistory,\r\n    initialPageParam: 1,\r\n    getNextPageParam: (lastPage) =>\r\n      lastPage.hasNext ? lastPage.page + 1 : undefined,\r\n    getPreviousPageParam: (firstPage) => firstPage.page - 1,\r\n  });\r\n\r\n  const { elementRef, isVisible } = useIntersectionObserver();\r\n\r\n  useEffect(() => {\r\n    if (isVisible && hasNextPage && !isFetchingNextPage) {\r\n      fetchNextPage();\r\n    }\r\n  }, [isVisible, hasNextPage, isFetchingNextPage, fetchNextPage]);\r\n\r\n  const paginatedTravels = data?.pages.flatMap((page) => page.data);\r\n\r\n  if (isLoading)\r\n    return Array.from({ length: 3 }).map((_, i) => (\r\n      <div key={i} className=\"skeleton h-28 w-full my-1\" />\r\n    ));\r\n  if (isError) return <Error />;\r\n\r\n  return (\r\n    <div className=\"px-1\">\r\n      <HistoryList travelHistory={paginatedTravels} />\r\n      <div\r\n        ref={elementRef}\r\n        className=\"h-10 w-full flex justify-center items-center\"\r\n      >\r\n        {isFetchingNextPage && <span className=\"loading loading-dots \"></span>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Paths from \"@constants/paths.constants\";\r\nimport { useSelector } from \"@hooks\";\r\nimport { TravelDirection } from \"@interfaces/enums/TravelDirection\";\r\nimport { Travel } from \"@interfaces/models/travel\";\r\nimport { capitalize } from \"@utils/capitalize\";\r\n\r\nimport moment from \"moment\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { mapDirectionBadge, mapTravelStyle, mapTravelText } from \"./utils\";\r\n\r\ninterface Props extends Travel {}\r\n\r\nexport default function HistoryItem({\r\n  id,\r\n  ownerCode,\r\n  name,\r\n  direction,\r\n  state,\r\n  travelDate,\r\n  type,\r\n}: Props) {\r\n  const navigate = useNavigate();\r\n  const { setSelectedTravel } = useSelector((state) => state.travel);\r\n  const handleClick = () => {\r\n    setSelectedTravel({\r\n      id,\r\n      ownerCode,\r\n      direction,\r\n      state,\r\n      travelDate,\r\n      type,\r\n    });\r\n    navigate(Paths.HISTORY_DETAIL);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <article\r\n        className=\"card card-compact shadow-xl cursor-pointer\"\r\n        role=\"listitem\"\r\n        onClick={handleClick}\r\n      >\r\n        <div className=\"card-body\">\r\n          <header className=\"flex flex-col\">\r\n            <span\r\n              className=\"font-bold text-base\"\r\n              aria-label={\r\n                type === \"offer\" ? \"Oferta de viaje\" : \"Solicitud de viaje\"\r\n              }\r\n            >\r\n              {capitalize(name.split(\" \")[0])}\r\n              {type === \"offer\" ? \"ðŸš˜\" : \"ðŸ¤š\"}\r\n            </span>\r\n            <span\r\n              className={`badge ${\r\n                mapDirectionBadge[Number(direction) as TravelDirection]\r\n              }`}\r\n              aria-label={`DirecciÃ³n del viaje: ${\r\n                direction ? \"Ida\" : \"Vuelta\"\r\n              }`}\r\n            >\r\n              {direction ? \"Ida\" : \"Vuelta\"}\r\n            </span>\r\n          </header>\r\n          <main className=\"flex justify-between\">\r\n            <section className=\"flex flex-col\">\r\n              <time\r\n                className=\"font-bold\"\r\n                dateTime={moment(travelDate).format()}\r\n              >\r\n                {capitalize(moment(travelDate).calendar())}\r\n              </time>\r\n              <span\r\n                className={`${mapTravelStyle[state]}`}\r\n                aria-label={`Estado del viaje: ${mapTravelText[state]}`}\r\n              >\r\n                {mapTravelText[state]}\r\n              </span>\r\n            </section>\r\n          </main>\r\n        </div>\r\n      </article>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}