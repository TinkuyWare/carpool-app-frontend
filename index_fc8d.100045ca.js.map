{"version":3,"sources":["/src/services/user.service.ts"],"sourcesContent":["import type { User } from \"@interfaces/models/user\";\r\nimport { http } from \"@utils/http\";\r\nimport { getCookie, setCookie } from \"react-use-cookie\";\r\n\r\nclass UserService {\r\n  public static async signUp(\r\n    data: {\r\n      phone: string;\r\n      code: string;\r\n      zoneId: number;\r\n    } | null\r\n  ): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    userId: string;\r\n    name: string;\r\n  }> {\r\n    try {\r\n      if (!data) throw new Error();\r\n      const res = await http.post(\"user\", data);\r\n      if (!res.success) throw new Error(res.message);\r\n      setCookie(\"tkn\", res.data.token);\r\n      return {\r\n        success: res.success,\r\n        message: res.message,\r\n        userId: res.data?.userId,\r\n        name: res.data?.name,\r\n      };\r\n    } catch (error) {\r\n      throw new Error((error as Error).message);\r\n    }\r\n  }\r\n\r\n  public static async getUserType(code: User[\"code\"]): Promise<{\r\n    name: string;\r\n    userType: \"INACTIVE\" | \"SUSPENDED\" | \"DRIVER\" | \"PASSENGER\" | \"BOTH\";\r\n  }> {\r\n    try {\r\n      const token = getCookie(\"tkn\");\r\n      if (!token || !code) throw new Error();\r\n\r\n      const res = await http.get(`user/type/${code}`, {\r\n        Authorization: `Bearer ${token}`,\r\n      });\r\n      if (!res.success) throw new Error(res.message);\r\n      return res.data;\r\n    } catch (error) {\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n  public static async changePassword(data: {\r\n    password: string;\r\n    newPassword: string;\r\n  }): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n  }> {\r\n    try {\r\n      const token = getCookie(\"tkn\");\r\n      const res = await http.patch(\"user/change-password\", data, {\r\n        Authorization: `Bearer ${token}`,\r\n      });\r\n      if (!res.success) throw new Error(res.message);\r\n      return res;\r\n    } catch (error) {\r\n      throw new Error((error as Error).message);\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserService;\r\n"],"names":[],"mappings":"4RAIA,KAAA,CACE,MAAA,CAAA,KAAA,CAAoB,MAAA,CAClB,CAIQ,CAMP,CACD,GAAI,CACF,EAAA,CAAI,CAAC,CAAA,CAAM,KAAA,CAAM,KAAI,CAAA,CAAA,CACrB,GAAA,CAMU,CAAA,CACF,CAAA,CAPF,CAAA,CAAM,KAAA,CAAM,CAAA,CAAA,IAAA,CAAK,IAAI,CAAC,CAAA,IAAA,CAAA,CAAQ,CAAA,CAAA,CACpC,EAAA,CAAI,CAAC,CAAA,CAAI,OAAO,CAAE,KAAA,CAAM,KAAI,CAAM,CAAA,CAAI,OAAO,CAAA,CAE7C,MAAA,CADA,CAAA,CAAA,SAAA,CAAU,CAAA,GAAA,CAAA,CAAO,CAAA,CAAI,IAAI,CAAC,KAAK,CAAA,CACxB,CACL,OAAA,CAAS,CAAA,CAAI,OAAO,CACpB,OAAA,CAAS,CAAA,CAAI,OAAO,CACpB,MAAM,CAAA,IAAA,CAAA,CAAA,CAAA,CAAE,CAAA,CAAA,CAAA,CAAI,IAAI,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAR,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAU,MAAM,CACxB,IAAI,CAAA,IAAA,CAAA,CAAA,CAAA,CAAE,CAAA,CAAA,CAAA,CAAI,IAAI,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAR,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAU,IAAI,CACtB,CACF,CAAE,KAAA,CAAO,CAAA,CAAO,CACd,KAAA,CAAM,KAAI,CAAM,CAAC,CAAgB,OAAO,CAAA,CAC1C,CACF,CAEA,MAAA,CAAA,KAAA,CAAoB,WAAA,CAAY,CAAkB,CAG/C,CACD,GAAI,CACF,GAAA,CAAM,CAAA,CAAQ,CAAA,CAAA,SAAA,CAAU,CAAA,GAAA,CAAA,CAAA,CACxB,EAAA,CAAI,CAAC,CAAA,CAAA,CAAS,CAAC,CAAA,CAAM,KAAA,CAAM,KAAI,CAAA,CAAA,CAE/B,GAAA,CAAM,CAAA,CAAM,KAAA,CAAM,CAAA,CAAA,IAAA,CAAK,GAAG,CAAC,CAAC,IAAA,CAAA,IAAA,CAAA,CAAA,CAAiB,MAAA,CAAL,CAAA,CAAA,CAAQ,CAC9C,aAAA,CAAe,CAAC,MAAA,CAAA,CAAA,CAAe,MAAA,CAAN,CAAA,CAC3B,CAAA,CAAA,CACA,EAAA,CAAI,CAAC,CAAA,CAAI,OAAO,CAAE,KAAA,CAAM,KAAI,CAAM,CAAA,CAAI,OAAO,CAAA,CAC7C,MAAA,CAAO,CAAA,CAAI,IAAI,CACjB,CAAE,KAAA,CAAO,CAAA,CAAO,CACd,KAAA,CAAM,KAAI,CAAA,CAAA,CACZ,CACF,CAEA,MAAA,CAAA,KAAA,CAAoB,cAAA,CAAe,CAGlC,CAGE,CACD,GAAI,CACF,GAAA,CAAM,CAAA,CAAQ,CAAA,CAAA,SAAA,CAAU,CAAA,GAAA,CAAA,CAAA,CAClB,CAAA,CAAM,KAAA,CAAM,CAAA,CAAA,IAAA,CAAK,KAAK,CAAC,CAAA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAwB,CAAA,CAAM,CACzD,aAAA,CAAe,CAAC,MAAA,CAAA,CAAA,CAAe,MAAA,CAAN,CAAA,CAC3B,CAAA,CAAA,CACA,EAAA,CAAI,CAAC,CAAA,CAAI,OAAO,CAAE,KAAA,CAAM,KAAI,CAAM,CAAA,CAAI,OAAO,CAAA,CAC7C,MAAA,CAAO,CAAA,CACT,CAAE,KAAA,CAAO,CAAA,CAAO,CACd,KAAA,CAAM,KAAI,CAAM,CAAC,CAAgB,OAAO,CAAA,CAC1C,CACF,CACF,CAAA,CAAA"}